const PDFDocument = require("pdfkit");
const fs = require("fs");

const invoice = {
  shipping: {
    name: "Styx San",
    street: "Yefe Nof",
    city: "Nahariya",
  },
  items: [
    {
      item: "TC 100",
      description: "Toner Cartridge",
      quantity: 2,
      amount: 6000,
    },
    {
      item: "USB_EXT",
      description: "USB Cable Extender",
      quantity: 1,
      amount: 2000,
    },
  ],
  subtotal: 8000,
  paid: 0,
  invoice_nr: 1,
};

function buildPDF(dataCallback, endCallback) {
  const doc = new PDFDocument({ margin: 50 });

  //   Callbacks to stream data to user
  doc.on("data", dataCallback);
  doc.on("end", endCallback);

  //   Calling functions to insert data into PDF file
  generateHeader(doc);
  generateCustomerInformation(doc, invoice);
  generateInvoiceTable(doc, invoice);
  generateFooter(doc);

  doc.end();

  // Functions
  function generateHeader(doc) {
    doc
      //   .image("./images/shop.png", 50, 45, { width: 50 })
      .fillColor("#444444")
      .fontSize(20)
      .text("MyStore", 110, 56)
      .fontSize(10)
      .moveDown();
  }

  function generateFooter(doc) {
    doc
      .fontSize(10)
      .text(
        "Order received successfully, Thank you for your business.",
        50,
        715,
        { align: "center", width: 500 }
      )
      .text("Generated by MyStore - Ohad Mor Yosef.", 50, 730, {
        align: "center",
        width: 500,
      });
  }

  function generateCustomerInformation(doc, invoice) {
    const shipping = invoice.shipping;

    doc
      .text(`Invoice Number: ${invoice.invoice_nr}`, 50, 200)
      .text(`Invoice Date: ${new Date().toLocaleDateString("he-IL")}`, 50, 215)
      .text(shipping.name, 300, 200)
      .text(`${shipping.city}, ${shipping.street}`, 300, 215)
      .moveDown();
  }

  function generateTableRow(doc, y, c1, c2, c3, c4) {
    doc
      .fontSize(10)
      .text(c1, 50, y)
      .text(c2, 180, y, { width: 90, align: "right" })
      .text(c3, 330, y, { width: 90, align: "right" })
      .text(c4, 0, y, { align: "right" });
  }

  function generateInvoiceTable(doc, invoice) {
    let i,
      invoiceTableTop = 330;

    doc.font("Helvetica-Bold");
    generateTableRow(
      doc,
      invoiceTableTop,
      "Product Name",
      "Price",
      "Quantity",
      "Total Price"
    );
    generateHr(doc, invoiceTableTop + 20);
    doc.font("Helvetica");

    for (i = 0; i < invoice.items.length; i++) {
      const item = invoice.items[i];
      const position = invoiceTableTop + (i + 1) * 30;
      generateTableRow(
        doc,
        position,
        item.description,
        item.amount / item.quantity,
        item.quantity,
        item.amount
      );
      generateHr(doc, position + 20);
    }

    const subtotalPosition = invoiceTableTop + (i + 1) * 30;
    generateTableRow(
      doc,
      subtotalPosition,
      "",
      "",
      "Total Price",
      invoice.subtotal
    );
  }
}

function generateHr(doc, y) {
  doc.strokeColor("#aaaaaa").lineWidth(1).moveTo(50, y).lineTo(550, y).stroke();
}

module.exports = { buildPDF };
